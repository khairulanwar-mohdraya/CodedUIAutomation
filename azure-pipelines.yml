# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  chromeDriverVersion: '125.0.6422.78'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '7.0.409' # Specify the .NET version you are using

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:Configuration=$(buildConfiguration)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'

# Download ChromeDriver
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $chromeDriverVersion = '$(chromeDriverVersion)'
      $chromeDriverUrl = "https://storage.googleapis.com/chrome-for-testing-public/125.0.6422.78/win32/chromedriver-win32.zip"
      $chromeDriverZip = "$(Build.BinariesDirectory)\chromedriver-win32.zip"
      $chromeDriverPath = "$(Build.BinariesDirectory)\chromedriver"

      Invoke-WebRequest -Uri $chromeDriverUrl -OutFile $chromeDriverZip
      Expand-Archive -Path $chromeDriverZip -DestinationPath "$(Build.BinariesDirectory)"
      Remove-Item -Path $chromeDriverZip

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/WebApp/WebApp*.csproj'
    arguments: '--configuration $(buildConfiguration) --logger trx'
  env:
    CHROMEWEBDRIVER: $(Build.BinariesDirectory)\chromedriver
    TEST_ENVIRONMENT: azure

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/TestResults/*.trx'
    testResultsFormat: 'VSTest'
    mergeTestResults: true
